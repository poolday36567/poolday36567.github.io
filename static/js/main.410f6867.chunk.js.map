{"version":3,"sources":["title/title.js","pool/pool.js","weather/widget/widget.js","weather/weather.js","footer/footer.js","index.js"],"names":["Title","props","state","date","counter","getDate","bind","this","d","Date","setState","getMonth","getFullYear","className","React","Component","Pool","apiResponse","lat","lon","getData","success","getUserLocation","pos","crd","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","err","console","warn","code","message","enableHighAccuracy","timeout","maximumAge","fetch","then","response","text","data","Widget","primary","secondary","secondary2","other1","other2","WeatherContainer","splitToDigit","n","map","Number","api","convertIdToWeather","log","json","id","first","weather","specificWeather","temp","feelsLike","tempMin","tempMax","clouds","humidity","Footer","target","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.410f6867.chunk.js","sourcesContent":["import React from 'react';\nimport './title.css';\n\nclass Title extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdate: '',\n\t\t\tcounter: 0\n\t\t};\n\t\tthis.getDate = this.getDate.bind(this);\n\t}\n\tgetDate () {\n\t\tif (this.state.counter < 1) {\n\t\t\tlet d = new Date();\n\t\t\tthis.setState({\n\t\t\t\tdate: `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`,\n\t\t\t\tcounter: 1\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tthis.getDate();\n\t\treturn(\n            <div className='title'>\n\t\t\t    <h1>Is {this.state.date} a Good Pool Day?</h1>\n            </div>\n\t\t);\n\t}\n}\n\nexport default Title;","import React from 'react';\nimport './pool.css';\n\nclass Pool extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            counter: 0,\n            apiResponse: '',\n            lat: 38.992460,\n            lon: -77.099580,\n        }\n        this.getData = this.getData.bind(this);\n        this.success = this.success.bind(this);\n        this.getUserLocation = this.getUserLocation.bind(this);\n    }\n    success(pos) {\n        var crd = pos.coords;\n        this.setState({\n            lat: crd.latitude,\n            lon: crd.longitude\n        });\n    }\n    getUserLocation () {\n        let options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n        };\n          \n        function error(err) {\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n        }\n          \n        navigator.geolocation.getCurrentPosition(this.success, error, options);\n    }\n    getData() {\n        if (this.state.counter < 1) {\n            this.getUserLocation();\n            fetch(`https://damp-everglades-29730.herokuapp.com/pool?lat=${this.state.lat}&lon=${this.state.lon}`)\n            .then(response => response.text())\n            .then(data => {\n                if (data === 'true') this.setState({ apiResponse: 'Today Is a Good Pool Day', counter: 1 })\n                else this.setState({ apiResponse: 'Today Isn\\'t a Good Pool Day', counter: 1 })\n            });\n        }\n    }\n    render() {\n        this.getData();\n        return (\n            <div className='pool'>\n                <p>{this.state.apiResponse}</p>\n            </div>\n        );\n    }\n}\n\nexport default Pool;","import React from 'react';\nimport './widget.css';\n\nclass Widget extends React.Component {\n    render() {\n        return (\n            <div className='widget'>\n                <div className='top'>\n                    <p className='primary'>{this.props.primary}</p>\n                    <p className='secondary'>{this.props.secondary}</p>\n                    <p className='secondary'>{this.props.secondary2}</p>\n                </div>\n                <div className='bottom'>\n                    <p className='other'>{this.props.other1}</p>\n                    <p className='other'>{this.props.other2}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Widget;","import React from 'react';\nimport Widget from './widget/widget';\nimport './weather.css';\n\nclass WeatherContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: [],\n            counter: 0,\n            lat: 38.992460,\n            lon: -77.099580,\n        }\n        // Bindings ensure calling the method doesn't point to 'null'\n        this.getData = this.getData.bind(this);\n        this.success = this.success.bind(this);\n        this.splitToDigit = this.splitToDigit.bind(this);\n        this.getUserLocation = this.getUserLocation.bind(this);\n        this.convertIdToWeather = this.convertIdToWeather.bind(this);\n    }\n    success(pos) {\n        var crd = pos.coords;\n        this.setState({\n            lat: crd.latitude,\n            lon: crd.longitude\n        });\n    }\n    getUserLocation () {\n        let options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n        };\n          \n        function error(err) {\n            console.warn(`ERROR(${err.code}): ${err.message}`);\n        }\n          \n        navigator.geolocation.getCurrentPosition(this.success, error, options);\n    }\n    getData () {\n        this.getUserLocation();\n        if (this.state.counter < 1) {\n            console.log(this.state.lat)\n            console.log(this.state.lon)\n            fetch(`https://damp-everglades-29730.herokuapp.com/weather?lat=${this.state.lat}&lon=${this.state.lon}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    api: data,\n                    counter: 1\n                });\n            });\n        }\n    }\n    // Technical debt ... I don't fully understand how it works\n    splitToDigit = n => {\n        return [...n + ''].map(Number)\n    }\n    convertIdToWeather (id) {\n        let first = this.splitToDigit(id)[0]\n        if (id === 800) return 'Clear Skys';\n        if (first === 2) return 'Thunderstorms';\n        if (first === 3) return 'Drizzle';\n        if (first === 5) return 'Rain';\n        if (first === 6) return 'Snow';\n        if (first === 7) return 'Atmospheric Event';\n        if (first === 8) return 'Clouds';\n    }\n    render() {\n        this.getData();\n        let api = this.state.api;\n        let degree = 'Â°';\n        return (\n            <div className='weather-container'>\n                <Widget primary={this.convertIdToWeather(api.weather)} secondary={api.specificWeather} />\n                <Widget primary={`${api.temp}${degree}`} secondary={`Feels like ${api.feelsLike}${degree}`} other1={`Low: ${api.tempMin}${degree}`} other2={`High: ${api.tempMax}${degree}`} />\n                <Widget primary={`${api.clouds}% clouds`} secondary={`${api.humidity}% humidity`} />\n            </div>\n        );\n    }\n}\n\nexport default WeatherContainer;","import React from 'react';\nimport './footer.css';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <p>Developed by Cannon Web Development</p>\n                <a target=\"_blank\" href='https://github.com/ThePotato10'>See us on Github</a>\n                <a target=\"_blank\" href='https://thepotato10.github.io/privacy/poolday.html'>Privacy Policy</a>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Title from './title/title';\nimport Pool from './pool/pool';\nimport Weather from './weather/weather';\nimport Footer from './footer/footer';\n\nReactDOM.render(\n    <div id='container'>\n        <Title />\n        <Pool />\n        <Weather />\n        <Footer />\n    </div>, \n    document.getElementById('root')\n);"],"sourceRoot":""}